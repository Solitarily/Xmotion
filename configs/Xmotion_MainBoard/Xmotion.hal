# #######################################
#
# HAL file for Xmotion Main Board (5 Axis)
#
# ########################################

# Launch the setup script to make sure hardware setup looks good
#loadusr -w ./setup.bridge.sh
loadusr -w ./setup.xmotion.gpio.sh

# ###################################
# Core EMC/HAL Loads
# ###################################

# kinematics
loadrt trivkins

# motion controller, get name and thread periods from ini file
# trajectory planner
loadrt tp
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES tp=tp kins=trivkins

# load low-level drivers

#loadrt hal_bb_gpio output_pins=107,126,224,226 input_pins=108,109,110,114,117,118,225
loadrt hal_bb_gpio output_pins=107,126,228,241,227 input_pins=108,109,110,114,117,118,231,230,229,225,212,119,216,213,211,242,214

loadrt [PRUCONF](DRIVER) prucode=$(HAL_RTMOD_DIR)/[PRUCONF](PRUBIN) [PRUCONF](CONFIG) halname=hpg
loadrt pid count=2
loadrt limit1 count=2
loadrt pepper count=1


# Python user-mode HAL module to read ADC value and generate a thermostat output for PWM
# t = Thermistor table (only epcos_B57560G1104 or 1 supported for now)
# a = analog input channel
loadusr -Wn Therm ./ReadTemp.py -n Therm --num_chan 2 -t 1 1 -a 4 5

# ################################################
# THREADS
# ################################################

addf hpg.capture-position                 servo-thread
addf bb_gpio.read                         base-thread
addf motion-command-handler               servo-thread
addf motion-controller                    servo-thread
addf pid.0.do-pid-calcs                   servo-thread
addf pid.1.do-pid-calcs                   servo-thread
addf limit1.0                             servo-thread
addf limit1.1                             servo-thread
addf hpg.update                           servo-thread
addf bb_gpio.write                        base-thread
addf pepper.update			  base-thread

# ######################################################
# Axis-of-motion Specific Configs (not the GUI)
# ######################################################


# ################
# X [0] Axis
# ################

# axis enable chain
newsig emcmot.00.enable bit
sets emcmot.00.enable FALSE

net emcmot.00.enable <= axis.0.amp-enable-out
net emcmot.00.enable => hpg.stepgen.00.enable


# position command and feedback
net emcmot.00.pos-cmd <= axis.0.motor-pos-cmd
net emcmot.00.pos-cmd => hpg.stepgen.00.position-cmd

net motor.00.pos-fb <= hpg.stepgen.00.position-fb
net motor.00.pos-fb => axis.0.motor-pos-fb


# timing parameters
setp hpg.stepgen.00.dirsetup        [AXIS_0]DIRSETUP
setp hpg.stepgen.00.dirhold         [AXIS_0]DIRHOLD

setp hpg.stepgen.00.steplen         [AXIS_0]STEPLEN
setp hpg.stepgen.00.stepspace       [AXIS_0]STEPSPACE

setp hpg.stepgen.00.position-scale  [AXIS_0]SCALE

setp hpg.stepgen.00.maxvel          [AXIS_0]STEPGEN_MAX_VEL
setp hpg.stepgen.00.maxaccel        [AXIS_0]STEPGEN_MAX_ACC

#setp hpg.stepgen.00.step_type       0
# P8.12 GPIO1_12
setp hpg.stepgen.00.steppin          0x4C
# P8.11 GPIO1_13
setp hpg.stepgen.00.dirpin           0x4D


# ################
# Y [1] Axis
# ################

# axis enable chain
newsig emcmot.01.enable bit
sets emcmot.01.enable FALSE

net emcmot.01.enable <= axis.1.amp-enable-out
net emcmot.01.enable => hpg.stepgen.01.enable


# position command and feedback
net emcmot.01.pos-cmd <= axis.1.motor-pos-cmd
net emcmot.01.pos-cmd => hpg.stepgen.01.position-cmd

net motor.01.pos-fb <= hpg.stepgen.01.position-fb
net motor.01.pos-fb => axis.1.motor-pos-fb


# timing parameters
setp hpg.stepgen.01.dirsetup        [AXIS_1]DIRSETUP
setp hpg.stepgen.01.dirhold         [AXIS_1]DIRHOLD

setp hpg.stepgen.01.steplen         [AXIS_1]STEPLEN
setp hpg.stepgen.01.stepspace       [AXIS_1]STEPSPACE

setp hpg.stepgen.01.position-scale  [AXIS_1]SCALE

setp hpg.stepgen.01.maxvel          [AXIS_1]STEPGEN_MAX_VEL
setp hpg.stepgen.01.maxaccel        [AXIS_1]STEPGEN_MAX_ACC

#setp hpg.stepgen.01.step_type       0
# P8.16 GPIO1_14
setp hpg.stepgen.01.steppin          0x4E
# P8.15 GPIO1_15
setp hpg.stepgen.01.dirpin           0x4F


# ################
# Z [2] Axis
# ################

# axis enable chain
newsig emcmot.02.enable bit
sets emcmot.02.enable FALSE

net emcmot.02.enable <= axis.2.amp-enable-out
net emcmot.02.enable => hpg.stepgen.02.enable


# position command and feedback
net emcmot.02.pos-cmd <= axis.2.motor-pos-cmd
net emcmot.02.pos-cmd => hpg.stepgen.02.position-cmd

net motor.02.pos-fb <= hpg.stepgen.02.position-fb
net motor.02.pos-fb => axis.2.motor-pos-fb


# timing parameters
setp hpg.stepgen.02.dirsetup        [AXIS_2]DIRSETUP
setp hpg.stepgen.02.dirhold         [AXIS_2]DIRHOLD

setp hpg.stepgen.02.steplen         [AXIS_2]STEPLEN
setp hpg.stepgen.02.stepspace       [AXIS_2]STEPSPACE

setp hpg.stepgen.02.position-scale  [AXIS_2]SCALE

setp hpg.stepgen.02.maxvel          [AXIS_2]STEPGEN_MAX_VEL
setp hpg.stepgen.02.maxaccel        [AXIS_2]STEPGEN_MAX_ACC

#setp hpg.stepgen.02.step_type       0
# P9.15 GPIO1_16
setp hpg.stepgen.02.steppin          0x50
# P9.23 GPIO1_17
setp hpg.stepgen.02.dirpin           0x51



# ##################################################
# Standard I/O - EStop, Enables, Limit Switches, Etc
# ##################################################

# create a signal for the estop loopback
net estop-loop bb_gpio.p9.in-12 => iocontrol.0.emc-enable-in

# create signals for tool loading loopback
net tool-prep-loop iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change => iocontrol.0.tool-changed

# P9-17 (B_DIR), P9-18 (B_STP), P9-24 (SPINDLE), P9-26 (AXES_ENA)

# Machine power
#
# Link pepper component as last item in io_enable chain
#
#net estop-loop => pepper.io-ena.in
#net io-enable pepper.io-ena.out => bb_gpio.p8.out-07
#setp bb_gpio.p8.out-07.invert 1

# feed resulting enable outputs
#net ena1 pepper.enable-sck.out => bb_gpio.p9.out-26
#net ena2 pepper.spindle-mosi.out => bb_gpio.p9.out-24
#setp bb_gpio.p9.out-26.invert 1
#setp bb_gpio.p9.out-24.invert 1

net torch-on motion.spindle-on => bb_gpio.p8.out-26

# Probe input
net probe-in => motion.probe-input
net probe-in  <= motion.digital-in-00 <= bb_gpio.p9.in-16
setp bb_gpio.p9.in-16.invert 1

# Aux Inputs
net aux1-in  <= motion.digital-in-01 <= bb_gpio.p9.in-25
setp bb_gpio.p9.in-25.invert 1

net aux2-in  <= motion.digital-in-02 <= bb_gpio.p9.in-29
setp bb_gpio.p9.in-29.invert 1

net aux3-in  <= motion.digital-in-03 <= bb_gpio.p9.in-30
setp bb_gpio.p9.in-30.invert 1

#net aux4-in  <= motion.digital-in-05 <= bb_gpio.p9.in-31
#setp bb_gpio.p9.in-31.invert 1
